var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var cookieSession = require('cookie-session');
var fs = require('fs');
//var config = JSON.parse(fs.readFileSync('config.json', 'utf8'));
var config = {};
config.modules = ["users","admin","about","life","doing","share","learn"];
/*
var SessionStore = require("session-mongoose")(express);
var store = new SessionStore({
    url: "mongodb://localhost/session",
    interval: 120000 // expiration check worker run interval in millisec (default: 60000)
});*/
var session = require('express-session'); //如果要使用session，需要单独包含这个模块

var app = express();
//ceshi2

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

// uncomment after placing your favicon in /public
app.use(favicon(__dirname + '/public/favicon.ico'));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(cookieSession({secret : 'blog.fens.me'}));

app.use(session({
    key: 'session',
    secret: 'SUPER SECRET SECRET',
	resave:false,
	saveUninitialized:false,
    store: require('mongoose-session')(mongoose)
}));
/*
app.use(session({
	store:store,
	resave:false,
  saveUninitialized:false,
  secret: 'keyboard cat'}));*/
app.use(express.static(path.join(__dirname, 'public')));
var viewParse = function(req,res,next){
	req.viewdir="";
	next();
};
app.use(viewParse);
//routes
app.use('/', require('./routes'));
regModules(config.modules);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
    app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
            message: err.message,
            error: err
        });
    });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
        message: err.message,
        error: {}
    });
});

function regModules(modules){
    var addModule = function(ab){
        app.use("/"+ab,require("./routes/"+ab));
    };
    if(modules instanceof Array){
        for(var i=0;i< modules.length;i++){
            addModule(modules[i]);
        }
    }
}
module.exports = app;
